We have tried to use a programming language and libraries that are agnostic to the underlying architecture and operating system (so it should be _fairly_ straight-forward to get things running on most machines !). Note that we will test and mark the coursework assignment on the lab machines, so you should not use any platform-specific features.

The template project we have provided assumes that you have the `clang` complier installed (which many of you may already have !). If you do not currently have `clang`, you can either install it now or alternatively (if you have a different compiler already installed) update the `COMPILER` variable in the project Makefile depending on what you have installed (so that it uses `g++` or `cl` for example).

You can use an IDE for development if you wish (CLion, Visual Studio, Eclipse, XCode etc). We have provided a CMake file inside the project root folder to help you configure and build your project. If you do use an IDE make sure that your project compiles without it (i.e. by providing a Make file that works on the lab machines).

Installation of SDL2 can sometimes be non-trivial (due to the fact that it must link with native graphics libraries). For this reason, the recommended way to install it is using a package manager (e.g. apt, rpm, yum, brew, ports, pacman etc). The name of the required SDL2 package will vary depending on your package manager. Here are some likely candidates for a range of different package managers:
```
apt install libsdl2-dev
rpm -i SDL2-devel
yum install SDL2-devel
brew install sdl2
port install libsdl2
pacman -S sdl2
```

If you can't get your package manager to install SDL2 (or if you don't have a package manager at all !) then you will have to install it manually. Various useful resources are available online for achieving this, but you might like to start by taking a look at <a href="https://lazyfoo.net/tutorials/SDL/01_hello_SDL/" target="_blank"> this tutorial</a>. If you are really struggling to install SDL on your existing operating system, then the following sections provide some alternative approaches you might like to consider.