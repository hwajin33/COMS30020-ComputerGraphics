You might have noticed a problem with the above image ? Depending on the order in which the triangles appear in an OBJ file (and the order you store them in your code), rendered triangles can sometimes overlap each other inappropriately. For example, in the image shown in the previous task, the blue box is shown overlapping the red one - which is not the case in the true model. View the slides and narrated audio above to understand what causes this problem and what we can do to solve it.

In your code, create a 2D array of floats (the dimensions of the array being the same width and height as the image plane / drawing window). You are going to use this array to keep track of the z depth of the model element drawn for each pixel on the screen. The data stored in this "depth buffer" will allow us to decide what colour to paint a pixel when there is contention. It is important that we store the _**inverse**_ of the z depth of the model element represented. We will explore the reason for this in a future workbook - for the time being you will have to take this on trust (or you could take a look at <a href="https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/visibility-problem-depth-buffer-depth-interpolation" target="_blank">this chapter</a> from scratch-a-pixel if you _really_ can't wait).

When filling the depth buffer, you need to calculate the z depth of specific points on the surface of a triangle. It is worth observing that you do not actually _have_ depth information for all these points. These depths can however be calculated by interpolating from the depth of known points (i.e. the vertices). Watch the animation linked to at the top of this section for help on achieving this.

Use your depth buffer in your drawing functions to help decide what colour to set a particular image plane pixel. In some cases the first colour you draw a pixel will be the correct one, in other cases this colour will need to be overwritten by a subsequent colour. If your depth buffer is operating correctly, you should see something like the image shown below. Don't forget to read the "Hints & Tips" section below before attempting this !